apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    field.cattle.io/publicEndpoints: >-
      [{"port":31835,"protocol":"TCP","serviceName":"default:nodered-nodeport","allNodes":true}]
  creationTimestamp: '2024-02-26T11:31:54Z'
  generation: 3
  labels:
    workload.user.cattle.io/workloadselector: apps.deployment-default-nodered
  name: nodered
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: apps.deployment-default-nodered
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: apps.deployment-default-nodered
      namespace: default
    spec:
      affinity: {}
      containers:
        - image: nodered/node-red
          imagePullPolicy: Always
          name: container-0
          ports:
            - containerPort: 1880
              name: 1880tcp
              protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
